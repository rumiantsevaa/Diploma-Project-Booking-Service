services:
  nginx-proxy:
    build: nginx
    image: serpentariya/booking_nginx:${TAG}
    restart: always
    volumes:
      - ./nginx/default.conf:/tmp/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    environment: 
      - FLASK_SERVER_ADDR=flask-app:8000
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - flask-app
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:80/health-check || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    command: /app/start.sh
    networks:
      - frontend
      - backend

  flask-app:
    build: flask
    image: serpentariya/booking_app:${TAG}
    restart: always
    ports: 
      - '8000:8000'
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:8000/flask-health-check || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    command: gunicorn -w 3 -t 60 -b 0.0.0.0:8000 app:app
    networks:
      - backend
      
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
    internal: true
