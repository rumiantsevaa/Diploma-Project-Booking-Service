name: Deploy Docker Compose to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Generate new Docker tag
      run: |
        CURRENT_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
        MAJOR=$(echo $CURRENT_VERSION | sed 's/v\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)/\1/')
        MINOR=$(echo $CURRENT_VERSION | sed 's/v\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)/\2/')
        PATCH=$(echo $CURRENT_VERSION | sed 's/v\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)/\3/')
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="v${MAJOR}.${MINOR}.${NEW_PATCH}"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Build and Push Flask Image
      uses: docker/build-push-action@v4
      with:
        context: ./flask
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/booking_app:${{ env.NEW_VERSION }}

    - name: Build and Push Nginx Image  
      uses: docker/build-push-action@v4
      with:
        context: ./nginx
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/booking_nginx:${{ env.NEW_VERSION }}

    - name: Deploy to AWS
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.AWS_SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.AWS_SSH_KEY }}
        script: |
          # Создаем директорию project если её нет
          mkdir -p ~/project
          
          # Переходим в директорию
          cd ~/project
          
          # Проверяем наличие git репозитория
          if [ -d .git ]; then
            # Если репозиторий существует, делаем pull
            git fetch --all
            git reset --hard origin/main
          else
            # Если репозитория нет, удаляем все и клонируем
            rm -rf *
            git clone https://github.com/rumiantsevaa/diploma-project-booking-service.git .
          fi
          
          # Создаем .env файл с тегом версии
          echo "TAG=${{ env.NEW_VERSION }}" > .env
          
          # Останавливаем контейнеры если они запущены
          if [ -f "docker-compose.yml" ] || [ -f "compose.yaml" ]; then
            docker compose down --remove-orphans
          fi
          
          # Удаляем неиспользуемые образы
          docker image prune -f
          
          # Подтягиваем новые образы
          docker compose pull
          
          # Запускаем контейнеры
          docker compose up -d --force-recreate
