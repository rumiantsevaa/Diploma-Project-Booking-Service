name: Cloudflare Performance Testing

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Cloudflare Performance Testing with required bypassing steps'
        required: false
        default: 'Should be manually triggered'

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Get current IP address for GitHub Actions
        id: get_ip
        run: |
          IP=$(curl -s https://api.ipify.org)
          echo "Current IP: $IP"
          echo "IP=$IP" >> $GITHUB_ENV

      - name: Add IP for GitHub Actions to Cloudflare whitelist
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/firewall/access_rules/rules" \
            -H "X-Auth-Email: ${{ secrets.CLOUDFLARE_EMAIL }}" \
            -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_KEY }}" \
            -H "Content-Type: application/json" \
            --data '{
              "mode":"whitelist",
              "configuration":{"target":"ip","value":"'"$IP"'"},
              "notes":"Allow GitHub Actions runner"
            }'

      - name: Configure Cloudflare
        run: |
          # Сохраняем текущее состояние Bot Fight Mode
          CURRENT_BOT_FIGHT_MODE=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/settings/bots" \
            -H "X-Auth-Email: ${{ secrets.CLOUDFLARE_EMAIL }}" \
            -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_KEY }}" \
            -H "Content-Type: application/json" | jq -r '.result.value')
          
          echo "CURRENT_BOT_FIGHT_MODE=$CURRENT_BOT_FIGHT_MODE" >> $GITHUB_ENV
          
          # Отключаем Bot Fight Mode
          curl -s -X PATCH "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/settings/bots" \
            -H "X-Auth-Email: ${{ secrets.CLOUDFLARE_EMAIL }}" \
            -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_KEY }}" \
            -H "Content-Type: application/json" \
            --data '{"value":"off"}'

      - name: Run Cloudflare Speed Test
        run: |
          # Запускаем тест производительности
          TEST_RESPONSE=$(curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/speed_tests" \
            -H "X-Auth-Email: ${{ secrets.CLOUDFLARE_EMAIL }}" \
            -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_KEY }}" \
            -H "Content-Type: application/json" \
            --data '{
              "target": "https://bbooking.pp.ua/",
              "location": "us-central1"
            }')
          
          TEST_ID=$(echo $TEST_RESPONSE | jq -r '.result.id')
          echo "TEST_ID=$TEST_ID" >> $GITHUB_ENV
          
          # Ждем завершения теста
          while true; do
            STATUS=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/speed_tests/$TEST_ID" \
              -H "X-Auth-Email: ${{ secrets.CLOUDFLARE_EMAIL }}" \
              -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_KEY }}" \
              | jq -r '.result.status')
            
            if [ "$STATUS" = "completed" ]; then
              break
            elif [ "$STATUS" = "failed" ]; then
              echo "Speed test failed"
              exit 1
            fi
            sleep 30
          done

      - name: Restore Bot Fight Mode
        if: always()
        run: |
          # Восстанавливаем исходное состояние Bot Fight Mode
          curl -s -X PATCH "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/settings/bots" \
            -H "X-Auth-Email: ${{ secrets.CLOUDFLARE_EMAIL }}" \
            -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_KEY }}" \
            -H "Content-Type: application/json" \
            --data '{"value":"'"${{ env.CURRENT_BOT_FIGHT_MODE }}"'"}'
